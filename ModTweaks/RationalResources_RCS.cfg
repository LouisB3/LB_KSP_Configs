// Opt-In: Stock [also covered by separate patches]

@PART[RCSBlock_v2,linearRcs]:BEFORE[RationalResourcesRCS]:NEEDS[Squad]
{
  %RationalResourcesRCSMP = True
}

@PART[vernierEngine]:BEFORE[RationalResourcesRCS]:NEEDS[Squad]
{
  %RationalResourcesRCSLFO = True
}

// Opt-In: Restock Plus [also covered by separate Extras patch]

@PART[restock-rcs*]:BEFORE[RationalResourcesRCS]:NEEDS[ReStockPlus]
{
  %RationalResourcesRCSMP = True
}

// Opt-In: Near Future Spacecraft

@PART[rcsblock-aero-5way-1,rcsblock-orbital-*]:BEFORE[RationalResourcesRCS]:NEEDS[NearFutureSpacecraft]
{
  %RationalResourcesRCSMP = True
}

// Opt-In: Near Future Launch Vehicles [excludes "integrated" RCS as NFLV has its own conditional patches for those]

@PART[nflv-rcs-aero-heavy-1,nflv-rcs-heavy-1x-1,nflv-rcs-heavy-4x-1]:BEFORE[RationalResourcesRCS]:NEEDS[NearFutureLaunchVehicles]
{
  %RationalResourcesRCSMP = True
}

@PART[nflv-rcs-aero-heavy-2,nflv-rcs-heavy-1x-2,nflv-rcs-heavy-4x-2]:BEFORE[RationalResourcesRCS]:NEEDS[NearFutureLaunchVehicles]
{
  %RationalResourcesRCSLFO = True
}

// Opt-In: Near Future Aeronautics

@PART[nfa-rcsblister-1]:BEFORE[RationalResourcesRCS]:NEEDS[NearFutureAeronautics]
{
  %RationalResourcesRCSMP = True
}

// Opt-In: Mark IV Spaceplane System

@PART[mk4rcsblister-2,mk4cockpit-shoulder-2]:BEFORE[RationalResourcesRCS]:NEEDS[MarkIVSystem]
{
  %RationalResourcesRCSMP = True
}

// Opt-In: Kerbal Reusability Expansion

@PART[SmallCapsuleEngineRCS]:BEFORE[RationalResourcesRCS]:NEEDS[KerbalReusabilityExpansion]
{
  %RationalResourcesRCSMP = True
}

@PART[HotGasThruster-*]:BEFORE[RationalResourcesRCS]:NEEDS[KerbalReusabilityExpansion]
{
  %RationalResourcesRCSLFO = True
}

// CRP: Monopropellant (main block)

@PART[*]:HAS[#RationalResourcesRCSMP[True],@MODULE[ModuleRCSFX]]:FOR[RationalResourcesRCS]:NEEDS[B9PartSwitch,CommunityResourcePack,!ClassicStock]
{
  IspVac = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,0[1, ]$ // get vac Isp number
  IspASL = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
  IspMult = #$IspVac$ // set numerator for div operation
  @IspMult /= 240 // denominator, the highest vac Isp number among stock parts

  // precision sequence to keep div number at 2dp and not let it be 12+dp
  @IspMult += 0.005
  @IspMult *= 100
  @IspMult = #$IspMult[0,.]$ // regex truncate, unknown behavior but used in RO
  @IspMult /= 100

  // set and scale reference Isp numbers
  IspVacAtm = 70
  IspASLAtm = 35
  @IspVacAtm *= #$IspMult$
  @IspASLAtm *= #$IspMult$

  IspVacH2 = 272
  IspASLH2 = 136
  @IspVacH2 *= #$IspMult$
  @IspASLH2 *= #$IspMult$

  IspVacN2 = 73
  IspASLN2 = 36.5
  @IspVacN2 *= #$IspMult$
  @IspASLN2 *= #$IspMult$

  IspVacAr = 52
  IspASLAr = 26
  @IspVacAr *= #$IspMult$
  @IspASLAr *= #$IspMult$

  IspVacXe = 28
  IspASLXe = 14
  @IspVacXe *= #$IspMult$
  @IspASLXe *= #$IspMult$

  IspVacCH4 = 105
  IspASLCH4 = 52.5
  @IspVacCH4 *= #$IspMult$
  @IspASLCH4 *= #$IspMult$

  IspVacNH3 = 96
  IspASLNH3 = 48
  @IspVacNH3 *= #$IspMult$
  @IspASLNH3 *= #$IspMult$

  IspVacCO2 = 61
  IspASLCO2 = 30.5
  @IspVacCO2 *= #$IspMult$
  @IspASLCO2 *= #$IspMult$

  @description ^= :$: <br><color="green">RCS can accept other fuels.</color>
  MODULE
  {
    name = ModuleB9PartSwitch
    moduleID = RCS
    switcherDescription = RCS Mode
    switcherDescriptionPlural = RCS Modes
    switchInFlight = True
    SUBTYPE
    {
      name = MonoPropellant
      title = MonoPropellant
      primaryColor = ResourceColorMonoPropellant
      secondaryColor = ResourceColorMonoPropellant
      descriptionDetail = #Uses MonoPropellant.<br><b>Isp:</b> $/IspASL$ / $/IspVac$s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = MonoPropellant
          PROPELLANT
          {
            name = MonoPropellant
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVac$
            key = #1 $/IspASL$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = IntakeAtm
      title = IntakeAtm
      primaryColor = LightGrey
      secondaryColor = LightGrey
      descriptionDetail = #Uses IntakeAtm.<br><b>Isp:</b> <color="yellow">$/IspASLAtm$ / $/IspVacAtm$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = IntakeAtm
          PROPELLANT
          {
            name = IntakeAtm
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacAtm$
            key = #1 $/IspASLAtm$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = LqdHydrogen
      title = LqdHydrogen
      primaryColor = ResourceColorLqdHydrogen
      secondaryColor = ResourceColorLqdHydrogen
      descriptionDetail = #Uses Liquid Hydrogen.<br><b>Isp:</b> <color="yellow">$/IspASLH2$ / $/IspVacH2$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = LqdHydrogen
          PROPELLANT
          {
            name = LqdHydrogen
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacH2$
            key = #1 $/IspASLH2$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = LqdNitrogen
      title = LqdNitrogen
      primaryColor = PeacockBlue
      secondaryColor = PeacockBlue
      descriptionDetail = #Uses Liquid Nitrogen.<br><b>Isp:</b> <color="yellow">$/IspASLN2$ / $/IspVacN2$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = LqdNitrogen
          PROPELLANT
          {
            name = LqdNitrogen
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacN2$
            key = #1 $/IspASLN2$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = ArgonGas
      title = ArgonGas
      primaryColor = Blush
      secondaryColor = Blush
      descriptionDetail = #Uses Argon gas.<br><b>Isp:</b> <color="yellow">$/IspASLAr$ / $/IspVacAr$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = ArgonGas
          PROPELLANT
          {
            name = ArgonGas
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacAr$
            key = #1 $/IspASLAr$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = XenonGas
      title = XenonGas
      primaryColor = ResourceColorXenonGas
      secondaryColor = ResourceColorXenonGas
      descriptionDetail = #Uses Xenon gas.<br><b>Isp:</b> <color="yellow">$/IspASLXe$ / $/IspVacXe$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = XenonGas
          PROPELLANT
          {
            name = XenonGas
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacXe$
            key = #1 $/IspASLXe$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = LqdMethane
      title = LqdMethane
      primaryColor = ResourceColorLqdMethane
      secondaryColor = ResourceColorLqdMethane
      descriptionDetail = #Uses Liquid Methane.<br><b>Isp:</b> <color="yellow">$/IspASLCH4$ / $/IspVacCH4$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = LqdMethane
          PROPELLANT
          {
            name = LqdMethane
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacCH4$
            key = #1 $/IspASLCH4$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = LqdAmmonia
      title = LqdAmmonia
      primaryColor = BurntRed
      secondaryColor = BurntRed
      descriptionDetail = #Uses Liquid Ammonia.<br><b>Isp:</b> <color="yellow">$/IspASLNH3$ / $/IspVacNH3$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = LqdAmmonia
          PROPELLANT
          {
            name = LqdAmmonia
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacNH3$
            key = #1 $/IspASLNH3$
            key = 4 0.001
          }
        }
      }
    }
    SUBTYPE
    {
      name = LqdCO2
      title = LqdCO2
      primaryColor = WarmGrey
      secondaryColor = WarmGrey
      descriptionDetail = #Uses Liquid Carbon Dioxide.<br><b>Isp:</b> <color="yellow">$/IspASLCO2$ / $/IspVacCO2$</color>s.
      MODULE
      {
        IDENTIFIER
        {
          name = ModuleRCSFX
        }
        DATA
        {
          thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
          resourceName = LqdCO2
          PROPELLANT
          {
            name = LqdCO2
            ratio = 1
            resourceFlowMode = STAGE_PRIORITY_FLOW
          }
          atmosphereCurve
          {
            key = #0 $/IspVacCO2$
            key = #1 $/IspASLCO2$
            key = 4 0.001
          }
        }
      }
    }
  }
}

// CRP: Monopropellant (cleanup)

@PART[*]:HAS[#RationalResourcesRCSMP[True],@MODULE[ModuleRCSFX]]:FOR[RationalResourcesRCS]:NEEDS[B9PartSwitch,CommunityResourcePack,!ClassicStock]
{
  !IspASL = nope
  !IspVac = nope
  !IspMult = nope

  !IspVacAtm = nope
  !IspASLAtm = nope

  !IspVacH2 = nope
  !IspASLH2 = nope

  !IspVacN2 = nope
  !IspASLN2 = nope

  !IspVacAr = nope
  !IspASLAr = nope

  !IspVacXe = nope
  !IspASLXe = nope

  !IspVacCH4 = nope
  !IspASLCH4 = nope

  !IspVacNH3 = nope
  !IspASLNH3 = nope

  !IspVacCO2 = nope
  !IspASLCO2 = nope
}

// CRP: LFO (main block)

@PART[*]:HAS[#RationalResourcesRCSLFO[True],@MODULE[ModuleRCSFX]]:FOR[RationalResourcesRCS]:NEEDS[B9PartSwitch,CommunityResourcePack,!ClassicStock]
{
  IspVac = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	IspASL = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
  IspMult = #$IspVac$ // set numerator for div operation
  @IspMult /= 260 // denominator, the highest vac Isp number among stock parts

  // precision sequence to keep div number at 2dp and not let it be 12+dp
  @IspMult += 0.005
  @IspMult *= 100
  @IspMult = #$IspMult[0,.]$ // regex truncate, unknown behavior but used in RO
  @IspMult /= 100

	IspVacH2 = 380
	IspASLH2 = 152
  @IspVacH2 *= #$IspMult$
  @IspASLH2 *= #$IspMult$

	IspVacCH4 = 300
	IspASLCH4 = 170
  @IspVacCH4 *= #$IspMult$
  @IspASLCH4 *= #$IspMult$

	@description ^= :$: <br><color="green">RCS can accept other fuels.</color>
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RCS
		switcherDescription = RCS Mode
		switcherDescriptionPlural = RCS Modes
		switchInFlight = True
		SUBTYPE
		{
			name = LFO
			title = Kerolox
			primaryColor = ResourceColorLiquidFuel
			secondaryColor = ResourceColorOxidizer
			descriptionDetail = #Uses LiquidFuel + Oxidizer.<br><b>Isp:</b> $/IspASL$ / $/IspVac$s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$ // thrust will change if the Isp is changed and thrusterPower is not re-declared
					PROPELLANT
					{
						name = LiquidFuel
						ratio = 0.45
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = Oxidizer
						ratio = 0.55
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVac$
						key = #1 $/IspASL$
						key = 5 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = Hydrolox
			title = Hydrolox
			primaryColor = ResourceColorLqdHydrogen
			secondaryColor = ResourceColorOxidizer
			descriptionDetail = #Uses LqdHydrogen + Oxidizer.<br><b>Isp:</b> <color="yellow">$/IspASLH2$ / $/IspVacH2$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					PROPELLANT
					{
						name = LqdHydrogen
						ratio = 1.5
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = Oxidizer
						ratio = 0.1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacH2$
						key = #1 $/IspASLH2$
						key = 5 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = Methalox
			title = Methalox
			primaryColor = PurpleyPink
			secondaryColor = ResourceColorOxidizer
			descriptionDetail = #Uses LqdMethane + Oxidizer.<br><b>Isp:</b> <color="yellow">$/IspASLCH4$ / $/IspVacCH4$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					PROPELLANT
					{
						name = LqdMethane
						ratio = 3
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					PROPELLANT
					{
						name = Oxidizer
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacCH4$
						key = #1 $/IspASLCH4$
						key = 5 0.001
					}
				}
			}
		}
	}
}

// CRP: LFO (cleanup)

@PART[*]:HAS[#RationalResourcesRCSLFO[True],@MODULE[ModuleRCSFX]]:FOR[RationalResourcesRCS]:NEEDS[B9PartSwitch,CommunityResourcePack,!ClassicStock]
{
  !IspVac = nope
	!IspASL = nope
  !IspMult = nope

	!IspVacH2 = nope
	!IspASLH2 = nope

	!IspVacCH4 = nope
	!IspASLCH4 = nope
}

// WBI Classic Stock: Monopropellant (main block)

@PART[*]:HAS[#RationalResourcesRCSMP[True],@MODULE[ModuleRCSFX]]:FOR[RationalResourcesRCS]:NEEDS[B9PartSwitch,ClassicStock]
{
  IspASL = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	IspVac = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	IspMult = #$IspVac$ // set numerator for div operation
	@IspMult /= 240 // denominator, the highest vac Isp number among stock parts

	// precision sequence to keep div number at 2dp and not let it be 12+dp
	@IspMult += 0.005
	@IspMult *= 100
	@IspMult = #$IspMult[0,.]$ // regex truncate, unknown behavior but used in RO
	@IspMult /= 100

	// set and scale reference Isp numbers
	IspVacAtm = 70
	IspASLAtm = 35
	@IspVacAtm *= #$IspMult$
	@IspASLAtm *= #$IspMult$

	IspVacPLM = 272
	IspASLPLM = 136
	@IspVacPLM *= #$IspMult$
	@IspASLPLM *= #$IspMult$

	IspVacN2O = 171.4
	IspASLN2O = 85.7
	@IspVacN2O *= #$IspMult$
	@IspASLN2O *= #$IspMult$

	IspVacXe = 28
	IspASLXe = 14
	@IspVacXe *= #$IspMult$
	@IspASLXe *= #$IspMult$

	IspVacRPT = 105
	IspASLRPT = 52.5
	@IspVacRPT *= #$IspMult$
	@IspASLRPT *= #$IspMult$

	@description ^= :$: <br><color="green">RCS can accept other fuels.</color>
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RCS
		switcherDescription = RCS Mode
		switcherDescriptionPlural = RCS Modes
		switchInFlight = True
		SUBTYPE
		{
			name = MonoPropellant
			title = MonoPropellant
			primaryColor = ResourceColorMonoPropellant
			secondaryColor = ResourceColorMonoPropellant
			descriptionDetail = #Uses MonoPropellant.<br><b>Isp:</b> $/IspASL$ / $/IspVac$s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = MonoPropellant
					PROPELLANT
					{
						name = MonoPropellant
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVac$
						key = #1 $/IspASL$
						key = 4 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = CompressedAtmosphere
			title = CompressedAtmosphere
			primaryColor = WarmGrey
			secondaryColor = WarmGrey
			descriptionDetail = #Uses Compressed Atmosphere.<br><b>Isp:</b> <color="yellow">$/IspASLAtm$ / $/IspVacAtm$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = Atmosphere
					PROPELLANT
					{
						name = CompressedAtmosphere
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacAtm$
						key = #1 $/IspASLAtm$
						key = 4 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = Propellium
			title = Propellium
			primaryColor = Lightblue
			secondaryColor = Lightblue
			descriptionDetail = #Uses Propellium gas.<br><b>Isp:</b> <color="yellow">$/IspASLPLM$ / $/IspVacPLM$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = Propellium
					PROPELLANT
					{
						name = Propellium
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacPLM$
						key = #1 $/IspASLPLM$
						key = 4 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = Nitronite
			title = Nitronite
			primaryColor = ResourceColorMonoPropellant
			secondaryColor = ResourceColorMonoPropellant
			descriptionDetail = #Uses Nitronite gas.<br><b>Isp:</b> <color="yellow">$/IspASLN2O$ / $/IspVacN2O$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = Nitronite
					PROPELLANT
					{
						name = Nitronite
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacN2O$
						key = #1 $/IspASLN2O$
						key = 4 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = XenonGas
			title = XenonGas
			primaryColor = ResourceColorXenonGas
			secondaryColor = ResourceColorXenonGas
			descriptionDetail = #Uses Xenon gas.<br><b>Isp:</b> <color="yellow">$/IspASLXe$ / $/IspVacXe$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = XenonGas
					PROPELLANT
					{
						name = XenonGas
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacXe$
						key = #1 $/IspASLXe$
						key = 4 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = Raptium
			title = Raptium
			primaryColor = PurpleyPink
			secondaryColor = PurpleyPink
			descriptionDetail = #Uses Raptium gas.<br><b>Isp:</b> <color="yellow">$/IspASLRPT$ / $/IspVacRPT$</color>s.
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = Raptium
					PROPELLANT
					{
						name = Raptium
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacRPT$
						key = #1 $/IspASLRPT$
						key = 4 0.001
					}
				}
			}
		}
	}
}

// WBI Classic Stock: Monopropellant (cleanup)

@PART[*]:HAS[#RationalResourcesRCSMP[True],@MODULE[ModuleRCSFX]]:FOR[RationalResourcesRCS]:NEEDS[B9PartSwitch,ClassicStock]
{
  !IspASL = nope
  !IspVac = nope
  !IspMult = nope

  !IspVacAtm = nope
  !IspASLAtm = nope

  !IspVacPLM = nope
  !IspASLPLM = nope

  !IspVacN2O = nope
  !IspASLN2O = nope

  !IspVacXe = nope
  !IspASLXe = nope

  !IspVacRPT = nope
  !IspASLRPT = nope
}
